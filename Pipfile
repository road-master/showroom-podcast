[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[dev-packages]
autoflake = "*"
bandit = {version = "*", markers="python_version >= '3.7'"}
black = {version = "*", markers="python_version >= '3.7'"}
bump2version = "*"
# Hotgix for Requirementslib which is dependency of Pipenv
# see: https://github.com/sarugaku/requirementslib/issues/296
chardet = "*"
# Hotfix for Pipenv's Bug see: https://github.com/pypa/pipenv/issues/4101
cohesion = "*"
# Hotfix for Pipenv's Bug:
# - Pipenv should prioritize more cross-platform sys_platform condition between packages when lock
#   · Issue #4101 · pypa/pipenv
#   https://github.com/pypa/pipenv/issues/4101
colorama = "*"
# Pipenv can't crawl coverage==3.5.3:
# - Command: "pipenv install --skip-lock" fails 
#   since it tries to parse legacy package metadata and raise InstallError
#   · Issue #5595 · pypa/pipenv
#   https://github.com/pypa/pipenv/issues/5595
coverage = ">=3.5.4"
# The dlint less than 0.14.0 limits max version of flake8.
dlint = ">=0.14.0"
docformatter = {extras = ["tomli"], version = "*"}
dodgy = "*"
# Since Pipenv can't lock for too much combinations to attempt lock:
# pip._vendor.resolvelib.resolvers.ResolutionTooDeep: 2000000
# The hacking depends flake8 ~=6.1.0, ~=5.0.1 or ~=4.0.1.
flake8 = {version = "!=6.0.0,!=5.0.0,>=4.0.1", markers="python_version >= '3.6'"}
# To use flake8 --radon-show-closures
flake8-polyfill = "*"
# Latest hacking depends on legacy version of flake8, and legacy hacking doesn't narrow flake8 version.
# When unpin hacking, it has possibility to install too legacy version of hacking.
hacking = {version = ">=5.0.0", markers="python_version >= '3.8'"}
invokelint = {version = ">=0.8.1", markers="python_version >= '3.7'"}
isort = "*"
mypy = "*"
# To graduate discussion about detailed code style of Python
pydocstyle = {version = "*", markers="python_version >= '3.6'"}
pylint = "*"
# To test
pytest = "*"
pytest-resource-path = "*"
pyvelocity = {version = "*", markers="python_version >= '3.9'"}
pytest-asyncio = "*"
pytest-mock = "*"
# - Radon can't run when use pytest log fornat: `$()d` · Issue #251 · rubik/radon
#   https://github.com/rubik/radon/issues/251
radon = "<6.0.0"
requests-mock = "*"
ruff = {version = "*", markers="python_version >= '3.7'"}
semgrep = {version = "*", markers="python_version >= '3.6'"}
showroompodcast = {editable = true, path = "."}
types-invoke = "*"
types-requests = "*"
types-setuptools = "*"
xenon = "*"

[packages]
# To use async / await syntax for CPU bound task
asynccpu = "*"
# To support Ctrl + C to stop FFmpeg archiving
asyncffmpeg = "*"
# To create CLI
click = ">=7.0"
# To request to SHOWROOM API
requests = "*"
slack-sdk = "*"
# To use YAML config file for list of programs to archive
yamldataclassconfig = "*"
